class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        if (strs.size() == 0) {
            return {{}};
        }
        unordered_map <string, vector<string>> anaM;
        vector<vector<string>> result;
        for (int i = 0; i < strs.size(); i++) {
            string sortStr = strs[i];
            sort(sortStr.begin(), sortStr.end());
            if (anaM.find(sortStr) != anaM.end()) {
                anaM[sortStr].push_back(strs[i]);
            }
            else {
                anaM[sortStr] = {strs[i]};
            }
        }
        unordered_map <string, vector<string>>::iterator iter = anaM.begin();
        while (iter != anaM.end()) {
            result.push_back(iter->second);
            iter++;
        }
        return result;
    }
};
