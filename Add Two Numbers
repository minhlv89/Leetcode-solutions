/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result = NULL;
        ListNode* tmpNode = NULL;
        int carry = 0;
        while (l1 != NULL || l2 != NULL) {
            int tmp = 0;
            if (l1 != NULL && l2 != NULL) {
                tmp = l1->val + l2->val + carry;
                l1 = l1->next;
                l2 = l2->next;
            }
            else if (l1 != NULL) {
                tmp = l1->val + carry;
                l1 = l1->next;
            }
            else if (l2 != NULL) {
                tmp = l2->val + carry;
                l2 = l2->next;
            }
            carry = tmp/10;
            tmp %= 10;

            if (tmpNode == NULL) {
                tmpNode = new ListNode(tmp);
                result = tmpNode;
            } else {
                tmpNode->next = new ListNode(tmp);
                tmpNode = tmpNode->next;
            }
        }
        if (carry == 1) {
            tmpNode->next = new ListNode(carry);
        }
        return result;
    }
};
